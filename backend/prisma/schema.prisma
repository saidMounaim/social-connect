// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  image    String?
  isAdmin  Boolean @default(false)

  posts    Post[]
  comments Comment[]
  likes    Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id    String  @id @default(uuid())
  body  String
  image String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  comments Comment[]
  likes    Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id   String @id @default(uuid())
  body String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
